# -*- coding: utf-8 -*-
"""ongo_test.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/161piq5nGE3hwsgJgDxt-hyfWdDaOFrxN

Install dependencies
"""

!pip install openai==0.28.0 torch torchvision transformers Pillow

"""Upload Image"""

from google.colab import files
uploaded = files.upload()

image_path = list(uploaded.keys())[0]

"""Load Blip"""

from transformers import BlipProcessor, BlipForConditionalGeneration
from PIL import Image
import torch

device = "cuda" if torch.cuda.is_available() else "cpu"

processor = BlipProcessor.from_pretrained("Salesforce/blip-image-captioning-base")
model = BlipForConditionalGeneration.from_pretrained("Salesforce/blip-image-captioning-base").to(device)

def get_caption(image_path):
    image = Image.open(image_path).convert("RGB")
    inputs = processor(images=image, return_tensors="pt").to(device)
    output = model.generate(**inputs)
    return processor.decode(output[0], skip_special_tokens=True)

"""Generate GPT-4 Critique"""

import openai

openai.api_key = "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"  # Paste your key here

def generate_ongo_prompt(caption):
    return f'''
You are Ongo Gablogian, a high-society art critic and self-proclaimed tastemaker.

You‚Äôve just encountered the following piece:

"{caption}"

Answer in exactly two short sentences. Your tone should blend elite gallery snob, failed poet, and coked-out performance artist.
'''

caption = get_caption(image_path)
prompt = generate_ongo_prompt(caption)

response = openai.ChatCompletion.create(
    model="gpt-4-1106-preview",
    messages=[{"role": "user", "content": prompt}]
)
critique = response['choices'][0]['message']['content']
print("üñºÔ∏è Caption:", caption)
print("üé§ Critique:", critique)

"""Generate Audio using ElevenLabs"""

import requests

ELEVENLABS_API_KEY = "sk_01e3f90050882edd005531843388bfad0282edbffbb2f8ad"
VOICE_ID = "L6vNCySpJygzavqMH5vx"

def generate_audio(text, output_path):
    url = f"https://api.elevenlabs.io/v1/text-to-speech/{VOICE_ID}/stream"
    headers = {
        "xi-api-key": ELEVENLABS_API_KEY,
        "Content-Type": "application/json"
    }
    payload = {
        "text": text,
        "model_id": "eleven_monolingual_v1",
        "voice_settings": {"stability": 0.4, "similarity_boost": 0.8}
    }
    response = requests.post(url, headers=headers, json=payload)
    if response.status_code == 200:
        with open(output_path, 'wb') as f:
            f.write(response.content)
    else:
        print("‚ùå ElevenLabs Error", response.status_code)
        print(response.text)

generate_audio(critique, "ongo.mp3")

"""Play the Audio"""

from IPython.display import Audio
Audio("ongo.mp3")